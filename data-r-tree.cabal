cabal-version: 2.2

name:                   data-r-tree
version:                1.0.0
synopsis:               Two-dimensional R-Trees.
description:            Two-dimensional spatial trees utilizing R-Tree and R*-Tree algorithms.

license:                MIT
license-file:           LICENSE
author:                 Sebastian Wagner, Birte Wagner, Oleksii Divak
maintainer:             Oleksii Divak <frozenwitness@gmail.com>
copyright:              Sebastian Wagner, Birte Wagner, Oleksii Divak
category:               Data Structures
build-type:             Simple

Extra-source-files:     changelog.md
                        README.md

bug-reports:            https://github.com/sebastian-philipp/r-tree/issues
homepage:               https://github.com/sebastian-philipp/r-tree

source-repository head
  type:                 git
  location:             https://github.com/sebastian-philipp/r-tree.git



flag visualizer
  Description: Whether the visualize executable should be built.
  Default: False

library
  build-depends:        base      >= 4.12 && < 5
                      , deepseq   >= 1.4  && < 1.5
                      , primitive >= 0.6  && < 0.8

  hs-source-dirs:       src

  exposed-modules:      Data.RTree.MBR
                        Data.RTree.Internal
                        Data.RTree.Internal.Constants
                        Data.RTree.Internal.Pretty
                        Data.RTree.Lazy
                        Data.RTree.Strict

  other-modules:        Data.Primitive.Array.Extra
                        Data.RTree.Lazy.Internal
                        Data.RTree.MBR.Internal

  ghc-options:          -Wall

  default-language:     Haskell2010

executable visualize
  build-depends:        base
                      , bytestring
                      , colour
                      , data-r-tree
                      , deepseq
                      , GLFW-b
                      , gl
                      , primitive
                      , random
                      , vector

  main-is:              Main.hs

  ghc-options:          -Wall -threaded

  hs-source-dirs:       app/visualize

  default-language:     Haskell2010

  if flag (visualizer)
    Buildable: True
  else
    Buildable: False

benchmark time
  build-depends:        base
                      , data-r-tree
                      , deepseq
                      , gauge
                      , primitive
                      , random

  type:                 exitcode-stdio-1.0

  main-is:              Main.hs

  ghc-options:          -Wall

  hs-source-dirs:       benchmark/time
                      , no

  default-language:     Haskell2010

benchmark space
  build-depends:        base
                      , data-r-tree
                      , random
                      , weigh

  type:                 exitcode-stdio-1.0

  main-is:              Main.hs

  ghc-options:          -Wall

  hs-source-dirs:       benchmark/space

  default-language:     Haskell2010

test-suite properties
  build-depends:        base
                      , data-r-tree
                      , deepseq
                      , hspec
                      , primitive
                      , random

  type:                 exitcode-stdio-1.0

  main-is:              Main.hs

  ghc-options:          -Wall

  hs-source-dirs:       test/properties
                      , no

  default-language:     Haskell2010

test-suite strict
  build-depends:        base
                      , data-r-tree
                      , deepseq
                      , hspec
                      , nothunks
                      , primitive
                      , random

  type:                 exitcode-stdio-1.0

  main-is:              Main.hs

  ghc-options:          -Wall

  hs-source-dirs:       test/strict
                      , no

  default-language:     Haskell2010
